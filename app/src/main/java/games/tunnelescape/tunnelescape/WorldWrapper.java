/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package games.tunnelescape.tunnelescape;

public class WorldWrapper {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected WorldWrapper(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WorldWrapper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        WorldWrapperModuleJNI.delete_WorldWrapper(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void setPhysicsWorldUpdateInterval(float interval) {
    WorldWrapperModuleJNI.WorldWrapper_setPhysicsWorldUpdateInterval(interval);
  }

  public static void setPhysicsEngineThreads(long threads) {
    WorldWrapperModuleJNI.WorldWrapper_setPhysicsEngineThreads(threads);
  }

  public WorldWrapper() {
    this(WorldWrapperModuleJNI.new_WorldWrapper(), true);
  }

  public PairDeque update() {
    return new PairDeque(WorldWrapperModuleJNI.WorldWrapper_update(swigCPtr, this), true);
  }

  public long addObject(boolean static_object, Vector2f pos, float width, float height) {
    return WorldWrapperModuleJNI.WorldWrapper_addObject(swigCPtr, this, static_object, Vector2f.getCPtr(pos), pos, width, height);
  }

  public void removeObject(long key) {
    WorldWrapperModuleJNI.WorldWrapper_removeObject(swigCPtr, this, key);
  }

  public void setObjectPhysicsProperties(long key, float elasticity, float density) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectPhysicsProperties(swigCPtr, this, key, elasticity, density);
  }

  public void setObjectCollisionMask(long key, long mask) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectCollisionMask(swigCPtr, this, key, mask);
  }

  public void setObjectOriginTransform(long key, Vector2f transform) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectOriginTransform(swigCPtr, this, key, Vector2f.getCPtr(transform), transform);
  }

  public void setObjectForce(long key, Vector2f force) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectForce(swigCPtr, this, key, Vector2f.getCPtr(force), force);
  }

  public void setObjectVelocity(long key, Vector2f velocity) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectVelocity(swigCPtr, this, key, Vector2f.getCPtr(velocity), velocity);
  }

  public void setObjectPosition(long key, Vector2f pos) {
    WorldWrapperModuleJNI.WorldWrapper_setObjectPosition(swigCPtr, this, key, Vector2f.getCPtr(pos), pos);
  }

  public ObjectStatus fetchPosition(long key) {
    return new ObjectStatus(WorldWrapperModuleJNI.WorldWrapper_fetchPosition(swigCPtr, this, key), true);
  }

}
